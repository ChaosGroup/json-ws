<%
	var root = locals.root;
	var title = locals.title;
	var url = locals.url;
	var examples = locals.examples;
	var snippets = locals.snippets;
	var code = locals.code;
	var client = locals.client;
%><html>
<head>
	<meta charset="utf-8">
	<title><%= title %> - Playground</title>
	<link rel="stylesheet" href="./static/codemirror.css">
	<link href="//netdna.bootstrapcdn.com/bootstrap/3.0.0/css/bootstrap.min.css" rel="stylesheet">
	<script src="//ajax.googleapis.com/ajax/libs/jquery/1.9.1/jquery.min.js"></script>
	<script src="//netdna.bootstrapcdn.com/bootstrap/3.0.0/js/bootstrap.min.js"></script>
	<script>
		<%-client%>
	</script>
	<script src="?proxy=JavaScript&localName=Proxy"></script>
	<script src="./static/codemirror.js"></script>
	<style>
		.CodeMirror {
			position: relative;;
			border: 1px solid #ddd !important;
			height: 85%;
		}

		.CodeMirror-gutter-elt {
			left: -22px !important;
		}

		.CodeMirror:hover {
			cursor: text;
		}

		#buttons {
			padding-left: 15px;
			margin-top: 15px;
			margin-bottom: 20px;
		}

		.tooltip-wrap {
			position: relative;
			display: inline-block;
		}

		.tooltip-wrap .tooltip-content {
			display: none;
			position: absolute;
			width: 100px;
			bottom: -20px;
			padding: 0;
		}

		.tooltip-wrap:hover .tooltip-content {
			display: block;
			font-size: 12px;
		}

		.tooltip-content > span {
			background-color: #e6e6e6;
			padding: 2px;
		}

		.btn {
			margin-right: 15px;
			height: 30px;
		}

		.dropdown-toggle {
			background-color: #E6E6E6;
		}
	</style>
</head>
<body>
<div style="width: 90%; margin-left: auto; margin-right: auto;">
	<div class="row" id="buttons">
		<ul class="nav navbar-nav">
		<li>
			<div class="tooltip-wrap">
				<button type="button" class="btn btn-primary btn-sm" id="runButton"><span class="glyphicon glyphicon-play">&nbsp;</span>Run
				</button>
				<div class="tooltip-content">
					<span>Ctrl + Enter</span>
				</div>
			</div>
		</li>
		<li>
		<div class="tooltip-wrap">
			<button type="button" class="btn btn-danger btn-sm" id="clearButton"><span
						class="glyphicon glyphicon-trash">&nbsp;</span>Clear
			</button>
			<div class="tooltip-content">
				<span>Ctrl + Delete</span>
			</div>
		</div>
		</li>
		<% if (examples.length > 0) { %>
		<li class="dropdown">
			<button class="btn btn-sm dropdown-toggle" type="button" id="examplesBtn" data-toggle="dropdown">
				Examples <span class="caret"></span>
			</button>
			<ul class="dropdown-menu" role="menu" aria-labelledby="examplesBtn">
				<% examples.forEach(function(example) {
				var link = url + "?viewer&example=" + example; %>
				<li role="presentation"><a role="menuitem" tabindex="-1" href="<%- link %>"><%- example %></a></li>
				<% }); %>
			</ul>
		</li>
		<% } %>

		<% if (snippets.length > 0) { %>
		<li class="dropdown">
			<button class="btn btn-sm dropdown-toggle" type="button" id="snippetsBtn" data-toggle="dropdown">
				Snippets <span class="caret"></span>
			</button>
			<ul class="dropdown-menu" role="menu" aria-labelledby="snippetsBtn">
				<% snippets.forEach(function(snippet) {
				var link = url + "?viewer&snippet=" + snippet; %>
				<li role="presentation"><a role="menuitem" tabindex="-1" href="<%- link %>"><%- snippet %></a></li>
				<% }); %>
			</ul>
		</li>
		<% } %>
		</ul>
	</div>

	<div class="row">
		<div class="col-xs-6">
			<label for="codeTextArea">Code</label><textarea id="codeTextArea"><% if (code) { %>
<%- code %>  <% } %>
			</textarea>
		</div>
		<div class="col-xs-6">
			<label for="outputTextArea">Output</label><textarea id="outputTextArea"></textarea>
		</div>
	</div>
</div>

<script type="text/javascript">
	(function () {
		'use strict';

		var outputString = '';
		var editor = CodeMirror.fromTextArea(codeTextArea, {
			mode: "javascript",
			lineNumbers: true,
			lineWrapping: true,
			indentUnit: 4,
			matchBrackets: true
		});

		var output = CodeMirror.fromTextArea(outputTextArea, {
			mode: "javascript",
			readOnly: true,
			lineWrapping: true,
			indentUnit: 4
		});

		function getFirstLine() {
			if (!window.location.origin) {
				window.location.origin = window.location.protocol + '//' + window.location.hostname +
						(window.location.port ? ':' + window.location.port: '');
			}
			return 'var proxy = new Proxy("' + window.location.origin + window.location.pathname + '");\n\n';
		}

		function initEditor() {
			outputString = '';
			output.setValue(outputString);
			editor.setValue(getFirstLine());
		}
		initEditor();

		<% if (code) { %>
			editor.setValue(getFirstLine() + $('#codeTextArea').text());
		<% } %>

		function run() {
			var code = editor.getValue();
			outputString = '';
			new Function('console', code)({
				log: function () {
					var text = '';
					for (var i = 0; i < arguments.length; i++) {
						text += JSON.stringify(arguments[i], null, 4) + ' ';
						console.log(arguments[i]);
					}
					outputString += text + '\n';
					output.setValue(outputString);
				},
				clear: function() {
					console.clear();
					outputString = '';
					output.setValue(outputString);
				}
			});
		}

		function clear() {
			initEditor();
		}

		function KeyDown(e) {
			var evtobj = window.event ? event : e;
			if (evtobj.keyCode == 13 && evtobj.ctrlKey) {
				run();
			} else if (evtobj.keyCode == 46 && evtobj.ctrlKey) {
				clear();
			}
		}

		document.onkeydown = KeyDown;
		$("#runButton").click(run);
		$("#clearButton").click(clear);
	})();
</script>
</body>
</html>
